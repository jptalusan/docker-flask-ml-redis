version: '3'

services:
  frontend:
    image: raspberrypi3-05:5000/frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
    ports:
      - "80:5098"
    deploy:
      placement:
        constraints:
          - node.role == manager
    depends_on:
      - redis

  backend:
    image: raspberrypi3-05:5000/backend
    #image: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
    ports:
      - "8081:8081"
    deploy:
      placement:
        constraints:
          - node.role == worker
      mode: replicated
      replicas: 6
    depends_on:
      - redis

  worker:
    image: raspberrypi3-05:5000/python:3.6
    build:
      context: ./worker
    command: rq worker -u redis://redis:6379
    volumes:
      - ./worker:/usr/src/app
    depends_on:
      - redis

  redis:
    image: raspberrypi3-05:5000/redis:4.0.10

  dashboard:
    build: ./dashboard
    image: raspberrypi3-05:5000/dashboard
    container_name: dashboard
    ports:
      - '9181:9181'
    command: rq-dashboard -H redis

  viz:
    image: alexellis2/visualizer-arm:latest
    ports:
      - "8080:8080"
    deploy:
      placement:
        constraints:
          - node.role == manager
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  default:
    external:
      name: mynet
